See bottom of file for tasks that are 'done' but which have not yet been
moved to HISTORY.txt (*=planned task, +=unexpected task)

Tests
    * can't run tests on windows!
    + can we fix LD_LIBRARY_PATH from within python, dispensing with need
      for run.sh and run.bat to set it? Would make running tests easier.
    * must automatically find all tests for run_test
    + there are some test failures on Windows

Rendering
    * Render using GL_TRIANGLES in pyglet batches

Svg Loader
    * Load svg from Inkscape to define rigid bodies and their appearance
    (check out squirtle)

Builder
    + add corridors between rooms
    + add a buffer for testing 'new_verts_ok', to prevent rooms which don't
      touch from coming too close

Rendering
    * colors associated with each vertex
    * gradient filled sky
    * stars above ground

Rocks
    * Irregular shape
    * Spawned in rooms - if in walls, then attach them to the static body

Rendering
    + black-cloaks to obscure everything not in line-of-sight

Infrastructure
    + need an autocombine that generates test suite from all test classes
      in module.
    + or use nose to run tests. delete 'run all tests' and the like?
    * Windows binary distribution, including Shapely DLL
    * Linux binary distribution
    * Need help for Mac binary distribution.
    + auto upload source/binary distributions? set as featured downloads?
      http://code.google.com/p/support/source/browse/trunk/scripts/googlecode_distutils_upload.py
    + startup should assert dependancies being used are local, not installed

Interaction
    + toggle fullscreen key
    + handle window resize

Testing
    + use michael's Mock instead of our Listener, for sake of monkey
      patching

Infrastructure
    + quick architecture diagram. review diffs to reality.
    + consistently use either abs or rel imports for solescion packages
    + make sure tests can be called directly from vim
    + make sure tests can be called directly from command line

Sound
    * sound effects
    * music

Rendering
    * line-of-sight masking
    * Render only rooms, and their contents, that are on-screen and visible.

== DONE ==

* Maze generation
    + integrate Shapely
    * Autogenerate a set of rooms to form a maze of sorts.
        * create a regular poly room from num_faces and first two points
        * choose a random wall from all existing rooms
        * add new room onto chosen wall
        * iterate
        * test for intersections and reject
    * choose a seed to generate an interesting large maze
    + one very large room to represent 'above ground'

Technical Debt
    + fix failing tests
    + tidy up run* all over the place
    + fix pylint
    + move dependancies inside solescion dir?
        I think not. Searches, pylint, nose would all include dependancies
    + source distribution using setuptools instead of zip
    + application takes version number from setup.py
    * setup.py py2exe_zip() creates archive with unwanted 'dist' path cmpt.
    * Windows binary distributable.
    + upload new source/binary versions as featured downloads

Keypresses:
    + quit (done)
    + screenshot (done)

Infrastructure:
    + -v prints version of application and of pyglet, pymunk, shapely & python
    + pause key

Handling
    * left/right controls stop imparting torque at fast spins
    * Damp down the rotation just a little more
    * Probably increase torque control a tad to compensate for that

